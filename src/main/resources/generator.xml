<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
  PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<!-- 配置生成器 -->
<generatorConfiguration>
	<!-- 引入配置文件 -->
	<!-- <properties resource="application.properties"/> -->
	<properties resource="application-dev.properties"/>
    <!-- 配置对象环境 -->
    <context id="MySqlContext" targetRuntime="MyBatis3Simple" defaultModelType="flat">

        <!-- 配置起始与结束标识符 -->
        <property name="beginningDemiliter" value="`"/>
        <property name="endingDemiliter" value="`"/>
        <!-- 这个插件给生成的Java模型对象增加了equals和hashCode方法 -->
		<plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"/>
        <!-- 配置注释生成器 -->
        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <property name="addRemarkComments" value="true"/>
        </commentGenerator>

        <!-- 必须配置的项，连接数据库 -->
        <jdbcConnection driverClass="${spring.datasource.driverClassName}" connectionURL="${spring.datasource.url}"
        userId="${spring.datasource.username}" password="${spring.datasource.password}">
        	<!--高版本的 mysql-connector-java 需要设置 nullCatalogMeansCurrent=true-->
    		<property name="nullCatalogMeansCurrent" value="true"/>
        </jdbcConnection>

        <!-- 配置生成的实体类位置 -->
        <javaModelGenerator targetPackage="com.coins.entity.rbac" targetProject="springboot-web">
        	<!-- 是否针对string类型的字段在set方法中进行修剪，默认false -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!-- 配置映射位置 -->
        <sqlMapGenerator targetPackage="com.coins.mapper.rbac" targetProject="springboot-web">
        </sqlMapGenerator>

        <!-- 配置接口位置 -->
        <javaClientGenerator targetPackage="com.coins.mapper.rbac" type="XMLMAPPER" targetProject="springboot-web">
        </javaClientGenerator>

        <!-- 配置数据库表 -->
        <!-- schema为数据库名，oracle需要配置，mysql不需要配置。
		     tableName为对应的数据库表名
		     domainObjectName 是要生成的实体类名(可以不指定)
		     enableXXXByExample 默认为 true， 为 true 会生成一个对应Example帮助类，帮助你进行条件查询，不想要可以设为false
		     -->
		<table schema="" tableName="admins" domainObjectName="Admin"
		       enableCountByExample="false" enableDeleteByExample="false" enableSelectByExample="false"
		       enableUpdateByExample="false" selectByExampleQueryId="false">
			    <!--是否使用实际列名,默认为false-->
			    <!--<property name="useActualColumnNames" value="false" />-->
		</table>
        
    </context>
</generatorConfiguration>